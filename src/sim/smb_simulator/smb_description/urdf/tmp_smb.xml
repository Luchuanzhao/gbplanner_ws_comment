<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from smb.urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="smb" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Materials -->
  <material name="black">
    <color rgba="0 0 0 255"/>
  </material>
  <material name="blue">
    <color rgba="0 0 200 255"/>
  </material>
  <material name="green">
    <color rgba="0 200 0 255"/>
  </material>
  <material name="grey">
    <color rgba="50 50 50 255"/>
  </material>
  <material name="orange">
    <color rgba="255 108 10 255"/>
  </material>
  <material name="brown">
    <color rgba="222 207 195 255"/>
  </material>
  <material name="red">
    <color rgba="200 0 0 255"/>
  </material>
  <material name="white">
    <color rgba="255 255 255 255"/>
  </material>
  <!-- Base link is the robot chassis -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.605 0.41 0.22"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.605 0.41 0.22"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="40"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.721666666667" ixy="0" ixz="0" iyy="1.38141666667" iyz="0" izz="1.38141666667"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint>
  <link name="LF_WHEEL_LINK">
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0571666666667" ixy="0" ixz="0" iyy="0.0571666666667" iyz="0" izz="0.09025"/>
    </inertial>
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="LF_WHEEL_LINK">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <minDepth>0.005</minDepth>
    <maxVel>100.0</maxVel>
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="LF_WHEEL" type="continuous">
    <parent link="base_link"/>
    <child link="LF_WHEEL_LINK"/>
    <origin rpy="0 0 0" xyz="0.2159 0.32 -0.05"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="LF_WHEEL_TRANS" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="LF_WHEEL_MOTOR">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="LF_WHEEL">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="RF_WHEEL_LINK">
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0571666666667" ixy="0" ixz="0" iyy="0.0571666666667" iyz="0" izz="0.09025"/>
    </inertial>
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="RF_WHEEL_LINK">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <minDepth>0.005</minDepth>
    <maxVel>100.0</maxVel>
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="RF_WHEEL" type="continuous">
    <parent link="base_link"/>
    <child link="RF_WHEEL_LINK"/>
    <origin rpy="0 0 0" xyz="0.2159 -0.32 -0.05"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="RF_WHEEL_TRANS" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="RF_WHEEL_MOTOR">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="RF_WHEEL">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="LH_WHEEL_LINK">
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0571666666667" ixy="0" ixz="0" iyy="0.0571666666667" iyz="0" izz="0.09025"/>
    </inertial>
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="LH_WHEEL_LINK">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <minDepth>0.005</minDepth>
    <maxVel>100.0</maxVel>
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="LH_WHEEL" type="continuous">
    <parent link="base_link"/>
    <child link="LH_WHEEL_LINK"/>
    <origin rpy="0 0 0" xyz="-0.2159 0.32 -0.05"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="LH_WHEEL_TRANS" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="LH_WHEEL_MOTOR">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="LH_WHEEL">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="RH_WHEEL_LINK">
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0571666666667" ixy="0" ixz="0" iyy="0.0571666666667" iyz="0" izz="0.09025"/>
    </inertial>
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.17" radius="0.19"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="RH_WHEEL_LINK">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <minDepth>0.005</minDepth>
    <maxVel>100.0</maxVel>
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="RH_WHEEL" type="continuous">
    <parent link="base_link"/>
    <child link="RH_WHEEL_LINK"/>
    <origin rpy="0 0 0" xyz="-0.2159 -0.32 -0.05"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="RH_WHEEL_TRANS" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="RH_WHEEL_MOTOR">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="RH_WHEEL">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!-- ROS control plugin to move the robot in simulation -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.001</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>
  <joint name="sensor_head_base_mount_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0.576"/>
    <parent link="base_link"/>
    <child link="sensor_head_base_link"/>
  </joint>
  <link name="sensor_head_base_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="velodyne_base_mount_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="sensor_head_base_link"/>
    <child link="velodyne_base_link"/>
  </joint>
  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="velodyne_base_link"/>
    <child link="velodyne"/>
  </joint>
  <link name="velodyne">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
    <sensor name="velodyne-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>440</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799387799</min_angle>
            <max_angle> 0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/velodyne_points</topicName>
        <frameName>velodyne</frameName>
        <min_range>0.2</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rgb_cam_front" type="fixed">
    <origin rpy="0 0 0" xyz="0.040 -0.02 0.09"/>
    <parent link="velodyne_base_link"/>
    <child link="rgb_cam_front"/>
  </joint>
  <!-- Camera -->
  <link name="rgb_cam_front">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="0"/>
    </inertial>
  </link>
  <gazebo reference="rgb_cam_front">
    <material>Gazebo/Black</material>
    <sensor name="camera1" type="camera">
      <update_rate>20</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1440</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
				           That pixel's noise value is added to each of its color
				           channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rgb_cam_front</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rgb_cam_front</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rgb_cam_left" type="fixed">
    <origin rpy="0 0 1.570795" xyz="0 0.040 0.09"/>
    <parent link="velodyne_base_link"/>
    <child link="rgb_cam_left"/>
  </joint>
  <!-- Camera -->
  <link name="rgb_cam_left">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="0"/>
    </inertial>
  </link>
  <gazebo reference="rgb_cam_left">
    <material>Gazebo/Black</material>
    <sensor name="camera1" type="camera">
      <update_rate>20</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1440</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
				           That pixel's noise value is added to each of its color
				           channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rgb_cam_left</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rgb_cam_left</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rgb_cam_right" type="fixed">
    <origin rpy="0 0 -1.570795" xyz="0 -0.040 0.09"/>
    <parent link="velodyne_base_link"/>
    <child link="rgb_cam_right"/>
  </joint>
  <!-- Camera -->
  <link name="rgb_cam_right">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.029 0.029 0.029"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="0"/>
    </inertial>
  </link>
  <gazebo reference="rgb_cam_right">
    <material>Gazebo/Black</material>
    <sensor name="camera1" type="camera">
      <update_rate>20</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1440</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
				           That pixel's noise value is added to each of its color
				           channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rgb_cam_right</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rgb_cam_right</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
</robot>

